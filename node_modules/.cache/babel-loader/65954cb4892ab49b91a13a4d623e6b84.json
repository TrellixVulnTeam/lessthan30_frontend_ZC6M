{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js\";\nimport React, { Component } from 'react';\nimport { indexWords } from '../../api/poem';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PoemWords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    indexWords(match.params.id, user).then(res => {\n      console.log(res.data.words);\n\n      for (let item in res.data.words) {\n        // this.setState({\n        //     words: this.words.push(word)\n        // })\n        console.log(res.data.words[item]);\n      }\n    }) //   .then((res) => this.setState({\n    //   }))\n    .then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    if (this.state.post === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (posts.length === 0) {\n      poemJSX = 'No poems, create some';\n    } else {\n      // eslint-disable-next-line array-callback-return\n      poemJSX = this.words.map(post => {\n        var _post$owner;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: postStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: (_post$owner = post.owner) === null || _post$owner === void 0 ? void 0 : _post$owner.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/posts/${post._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                style: styleBlock,\n                className: \"btn btn-light\",\n                children: \"View Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }, this)\n          }, void 0, false)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this);\n      }).reverse();\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styleBlock,\n        children: \"Bubble Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: poemJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(PoemWords);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js"],"names":["React","Component","indexWords","withRouter","PoemWords","constructor","props","state","words","componentDidMount","match","user","msgAlert","params","id","then","res","console","log","data","item","heading","message","variant","catch","error","render","post","poemJSX","posts","length","map","postStyle","owner","username","title","text","_id","styleBlock","reverse"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { indexWords } from '../../api/poem'\nimport { withRouter } from 'react-router-dom'\n\nclass PoemWords extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n        words:[]\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n\n    indexWords(match.params.id, user)\n      .then((res) => {\n          console.log(res.data.words)\n          for (let item in res.data.words) {\n            // this.setState({\n            //     words: this.words.push(word)\n\t        // })\n            console.log(res.data.words[item])\n          }\n      })\n    //   .then((res) => this.setState({\n\n    //   }))\n      .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n\nrender () {\n  if (this.state.post === null) {\n    return 'Loading...'\n  }\n\n  let poemJSX\n  if (posts.length === 0) {\n    poemJSX = 'No poems, create some'\n  } else {\n    // eslint-disable-next-line array-callback-return\n    poemJSX = this.words.map((post) => (\n      <div style={postStyle} key={post._id}>\n        <h1>{post.owner?.username}</h1>\n        <h5>{post.title}</h5>\n        <p>{post.text}</p>\n        <>\n          <Link to={`/posts/${post._id}`}><button type=\"button\" style={ styleBlock} className=\"btn btn-light\" >View Post</button></Link>\n        </>\n      </div>\n    )).reverse()\n  }\n  return (\n    <>\n      <h3 style={ styleBlock}>Bubble Feed</h3>\n      <ul>{poemJSX}</ul>\n\n    </>\n  )\n}\n}\n\nexport default withRouter(PoemWords)\n"]},"metadata":{},"sourceType":"module"}