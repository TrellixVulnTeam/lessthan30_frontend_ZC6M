{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/OnePoem.js\";\nimport React, { Component } from 'react';\nimport { showPoem, deletePoem, indexWords, deleteWord } from '../../api/poem';\nimport { withRouter } from 'react-router-dom';\nimport WordPanel from './WordPanel';\nimport Button from 'react-bootstrap/Button'; // parent of WordPanel and PoemWords\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass OnePoem extends Component {\n  constructor(props) {\n    super(props); // funtion to pass to child\n\n    this.deletePoemButton = () => {\n      const {\n        match,\n        user,\n        msgAlert,\n        history\n      } = this.props;\n      deletePoem(match.params.id, user).then(() => history.push('/poems')).then(() => {\n        msgAlert({\n          heading: 'Delete success',\n          message: 'Poem deleted </3',\n          variant: 'success'\n        });\n      }).catch(error => {\n        msgAlert({\n          heading: 'Delete fail',\n          message: 'Delete error: ' + error.message,\n          variant: 'danger'\n        });\n      });\n    };\n\n    this.deleteWordButton = (wordId, index) => {\n      const {\n        match,\n        user,\n        msgAlert\n      } = this.props;\n      deleteWord(match.params.id, wordId, user).then(() => {\n        this.state.words.splice(index, 1);\n      }).then(() => {\n        msgAlert({\n          heading: 'Delete success',\n          message: 'Word deleted </3',\n          variant: 'success'\n        });\n      }).catch(error => {\n        msgAlert({\n          heading: 'Delete fail',\n          message: 'Delete error: ' + error.message,\n          variant: 'danger'\n        });\n      });\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      id: null,\n      title: \"\",\n      owner: null,\n      stateChanged: false,\n      words: []\n    };\n  }\n\n  handler(word) {\n    this.setState({\n      words: [...this.state.words, word]\n    });\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    this.getPoemWords(match.params.id, user);\n    showPoem(match.params.id, user).then(res => this.setState({\n      title: res.data.poem.title,\n      id: res.data.poem.id,\n      owner: res.data.poem.owner\n    })).then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  getPoemWords(id, user) {\n    // const { match, user } = this.props\n    indexWords(id, user).then(res => {\n      //   console.log(res.data.words)\n      for (let item in res.data.words) {\n        this.setState({\n          words: [...this.state.words, res.data.words[item]]\n        }); //simple value\n      }\n    });\n  }\n\n  render() {\n    const {\n      user,\n      msgAlert,\n      match,\n      history\n    } = this.props;\n    const {\n      words\n    } = this.state;\n\n    if (words === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (words[0] === undefined) {\n      poemJSX = 'No words, add some!';\n    } else {\n      poemJSX = words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.deleteWordButton(word.id, index),\n          className: \"delete-button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Viewing Poem:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"font-link\",\n          children: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.deletePoemButton,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => history.push(`/updatepoem/${match.params.id}/`),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poem font-link\",\n          children: poemJSX\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(WordPanel, {\n          user: user,\n          msgAlert: msgAlert,\n          poemid: this.state.id,\n          handler: this.handler,\n          getPoemWords: this.getPoemWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(OnePoem);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/OnePoem.js"],"names":["React","Component","showPoem","deletePoem","indexWords","deleteWord","withRouter","WordPanel","Button","OnePoem","constructor","props","deletePoemButton","match","user","msgAlert","history","params","id","then","push","heading","message","variant","catch","error","deleteWordButton","wordId","index","state","words","splice","handler","bind","title","owner","stateChanged","word","setState","componentDidMount","getPoemWords","res","data","poem","item","render","poemJSX","undefined","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,gBAA7D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;;;;;AACA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC9BS,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN,EADkB,CAElB;;AAFkB,SAwDtBC,gBAxDsB,GAwDH,MAAM;AACvB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAqC,KAAKL,KAAhD;AAEAR,MAAAA,UAAU,CAACU,KAAK,CAACI,MAAN,CAAaC,EAAd,EAAkBJ,IAAlB,CAAV,CACGK,IADH,CACQ,MAAMH,OAAO,CAACI,IAAR,CAAa,QAAb,CADd,EAEGD,IAFH,CAEQ,MAAM;AACVJ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,OAAO,EAAE,gBADF;AAEPC,UAAAA,OAAO,EAAE,kBAFF;AAGPC,UAAAA,OAAO,EAAE;AAHF,SAAD,CAAR;AAKD,OARH,EASGC,KATH,CASUC,KAAD,IAAW;AAChBV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,OAAO,EAAE,aADF;AAEPC,UAAAA,OAAO,EAAE,mBAAmBG,KAAK,CAACH,OAF3B;AAGPC,UAAAA,OAAO,EAAE;AAHF,SAAD,CAAR;AAKD,OAfH;AAgBD,KA3EqB;;AAAA,SA6EtBG,gBA7EsB,GA6EH,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpC,YAAM;AAAEf,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,UAA4B,KAAKJ,KAAvC;AAEAN,MAAAA,UAAU,CAACQ,KAAK,CAACI,MAAN,CAAaC,EAAd,EAAkBS,MAAlB,EAA0Bb,IAA1B,CAAV,CACGK,IADH,CACS,MAAM;AACT,aAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B;AACH,OAHH,EAIGT,IAJH,CAIQ,MAAM;AACVJ,QAAAA,QAAQ,CAAC;AACPM,UAAAA,OAAO,EAAE,gBADF;AAEPC,UAAAA,OAAO,EAAE,kBAFF;AAGPC,UAAAA,OAAO,EAAE;AAHF,SAAD,CAAR;AAKD,OAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBV,QAAAA,QAAQ,CAAC;AACPM,UAAAA,OAAO,EAAE,aADF;AAEPC,UAAAA,OAAO,EAAE,mBAAmBG,KAAK,CAACH,OAF3B;AAGPC,UAAAA,OAAO,EAAE;AAHF,SAAD,CAAR;AAKD,OAjBH;AAkBD,KAlGqB;;AAGlB,SAAKS,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AAEA,SAAKJ,KAAL,GAAa;AACTX,MAAAA,EAAE,EAAE,IADK;AAETgB,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,KAAK,EAAE,IAHE;AAITC,MAAAA,YAAY,EAAE,KAJL;AAKTN,MAAAA,KAAK,EAAC;AALG,KAAb;AAOD;;AAEDE,EAAAA,OAAO,CAACK,IAAD,EAAO;AACZ,SAAKC,QAAL,CAAc;AAACR,MAAAA,KAAK,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBO,IAAtB;AAAP,KAAd;AACD;;AAEDE,EAAAA,iBAAiB,GAAI;AACf,UAAM;AAAE1B,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA4B,KAAKJ,KAAvC;AACA,SAAK6B,YAAL,CAAkB3B,KAAK,CAACI,MAAN,CAAaC,EAA/B,EAAmCJ,IAAnC;AAEAZ,IAAAA,QAAQ,CAACW,KAAK,CAACI,MAAN,CAAaC,EAAd,EAAkBJ,IAAlB,CAAR,CACCK,IADD,CACOsB,GAAD,IAAS,KAAKH,QAAL,CAAc;AAC7BJ,MAAAA,KAAK,EAAEO,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcT,KADQ;AAE7BhB,MAAAA,EAAE,EAAEuB,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAczB,EAFW;AAG7BiB,MAAAA,KAAK,EAAEM,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcR;AAHQ,KAAd,CADf,EAMChB,IAND,CAMM,MAAM;AACRJ,MAAAA,QAAQ,CAAC;AACTM,QAAAA,OAAO,EAAE,cADA;AAETC,QAAAA,OAAO,EAAE,cAFA;AAGTC,QAAAA,OAAO,EAAE;AAHA,OAAD,CAAR;AAKH,KAZD,EAaCC,KAbD,CAaQC,KAAD,IAAW;AACdV,MAAAA,QAAQ,CAAC;AACTM,QAAAA,OAAO,EAAE,aADA;AAETC,QAAAA,OAAO,EAAE,oBAAoBG,KAAK,CAACH,OAF1B;AAGTC,QAAAA,OAAO,EAAE;AAHA,OAAD,CAAR;AAKH,KAnBD;AAoBL;;AAEDiB,EAAAA,YAAY,CAAEtB,EAAF,EAAMJ,IAAN,EAAY;AAClB;AAEAV,IAAAA,UAAU,CAACc,EAAD,EAAKJ,IAAL,CAAV,CACCK,IADD,CACOsB,GAAD,IAAS;AACf;AACE,WAAK,IAAIG,IAAT,IAAiBH,GAAG,CAACC,IAAJ,CAASZ,KAA1B,EAAiC;AAC/B,aAAKQ,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAuBW,GAAG,CAACC,IAAJ,CAASZ,KAAT,CAAec,IAAf,CAAvB;AAAT,SAAd,EAD+B,CACyC;AACzE;AACJ,KANC;AAOL;;AAgDHC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAE/B,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBF,MAAAA,KAAlB;AAAyBG,MAAAA;AAAzB,QAAqC,KAAKL,KAAhD;AACA,UAAM;AAAEmB,MAAAA;AAAF,QAAY,KAAKD,KAAvB;;AAEA,QAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAO,YAAP;AACD;;AACD,QAAIgB,OAAJ;;AACA,QAAIhB,KAAK,CAAC,CAAD,CAAL,KAAaiB,SAAjB,EAA4B;AAC1BD,MAAAA,OAAO,GAAG,qBAAV;AACD,KAFD,MAEO;AACHA,MAAAA,OAAO,GAAGhB,KAAK,CAACkB,GAAN,CAAU,CAACX,IAAD,EAAOT,KAAP,kBAChB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA,oBAAOS,IAAI,CAACA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKX,gBAAL,CAAsBW,IAAI,CAACnB,EAA3B,EAA+BU,KAA/B,CAAvB;AAA8D,UAAA,SAAS,EAAC,eAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,cADM,CAAV;AAMH;;AAED,wBACE;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,WAAV;AAAA,oBAAuB,KAAKC,KAAL,CAAWK;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKtB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMI,OAAO,CAACI,IAAR,CAAc,eAAcP,KAAK,CAACI,MAAN,CAAaC,EAAG,GAA5C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiC4B;AAAjC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEhC,IAAjB;AAAuB,UAAA,QAAQ,EAAEC,QAAjC;AAA2C,UAAA,MAAM,EAAE,KAAKc,KAAL,CAAWX,EAA9D;AAAkE,UAAA,OAAO,EAAE,KAAKc,OAAhF;AAAyF,UAAA,YAAY,EAAE,KAAKQ;AAA5G;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAcD;;AAxI+B;;AA2IhC,oBAAelC,UAAU,CAACG,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { showPoem, deletePoem, indexWords, deleteWord } from '../../api/poem'\nimport { withRouter } from 'react-router-dom'\nimport WordPanel from './WordPanel'\nimport Button from 'react-bootstrap/Button'\n\n// parent of WordPanel and PoemWords\nclass OnePoem extends Component {\n  constructor (props) {\n    super(props)\n    // funtion to pass to child\n    this.handler = this.handler.bind(this)\n    \n    this.state = {\n        id: null,\n        title: \"\",\n        owner: null,\n        stateChanged: false,\n        words:[]\n    }\n  }\n\n  handler(word) {\n    this.setState({words:[...this.state.words, word]})\n  }\n\n  componentDidMount () {\n        const { match, user, msgAlert } = this.props\n        this.getPoemWords(match.params.id, user)\n\n        showPoem(match.params.id, user)\n        .then((res) => this.setState({\n        title: res.data.poem.title,\n        id: res.data.poem.id,\n        owner: res.data.poem.owner\n        }))\n        .then(() => {\n            msgAlert({\n            heading: 'Viewing Poem',\n            message: 'Woot success',\n            variant: 'success'\n            })\n        })\n        .catch((error) => {\n            msgAlert({\n            heading: 'View failed',\n            message: 'Error message: ' + error.message,\n            variant: 'danger'\n            })\n        })\n  }\n\n  getPoemWords (id, user) {\n        // const { match, user } = this.props\n\n        indexWords(id, user)\n        .then((res) => {\n        //   console.log(res.data.words)\n          for (let item in res.data.words) {\n            this.setState({ words: [...this.state.words, (res.data.words[item])] }) //simple value\n          }\n      })\n  }\n\ndeletePoemButton = () => {\n  const { match, user, msgAlert, history } = this.props\n\n  deletePoem(match.params.id, user)\n    .then(() => history.push('/poems'))\n    .then(() => {\n      msgAlert({\n        heading: 'Delete success',\n        message: 'Poem deleted </3',\n        variant: 'success'\n      })\n    })\n    .catch((error) => {\n      msgAlert({\n        heading: 'Delete fail',\n        message: 'Delete error: ' + error.message,\n        variant: 'danger'\n      })\n    })\n}\n\ndeleteWordButton = (wordId, index) => {\n  const { match, user, msgAlert } = this.props\n\n  deleteWord(match.params.id, wordId, user)\n    .then( () => {\n        this.state.words.splice(index, 1);\n    })\n    .then(() => {\n      msgAlert({\n        heading: 'Delete success',\n        message: 'Word deleted </3',\n        variant: 'success'\n      })\n    })\n    .catch((error) => {\n      msgAlert({\n        heading: 'Delete fail',\n        message: 'Delete error: ' + error.message,\n        variant: 'danger'\n      })\n    })\n}\n\n\n\nrender () {\n  const { user, msgAlert, match, history } = this.props\n  const { words } = this.state\n\n  if (words === null) {\n    return 'Loading...'\n  }\n  let poemJSX \n  if (words[0] === undefined) {\n    poemJSX = 'No words, add some!'\n  } else {\n      poemJSX = words.map((word, index) => (\n          <div className=\"word\" key={index}>\n            <span>{word.word}</span>\n            <Button onClick={() => this.deleteWordButton(word.id, index)} className=\"delete-button\">X</Button>\n          </div>\n      ))\n  }\n\n  return (\n    <>\n    <h3>Viewing Poem:</h3>\n      <div>\n        <h4 class=\"font-link\">{this.state.title}</h4>\n        <div>\n            <Button onClick={this.deletePoemButton}>Delete</Button>\n            <Button onClick={() => history.push(`/updatepoem/${match.params.id}/`)}>Update</Button>\n        </div>\n        <div className=\"poem font-link\">{poemJSX}</div>\n        <WordPanel user={user} msgAlert={msgAlert} poemid={this.state.id} handler={this.handler} getPoemWords={this.getPoemWords}/>\n      </div>\n    </>\n  )\n}\n}\n\nexport default withRouter(OnePoem)\n"]},"metadata":{},"sourceType":"module"}