{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js\";\nimport React, { Component } from 'react';\nimport { indexWords } from '../../api/poem';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PoemWords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    indexWords(match.params.id, user).then(res => {\n      console.log(res.data.words);\n\n      for (let item in res.data.words) {\n        // this.setState({\n        //     words: this.words.push(word)\n        // })\n        console.log(res.data.words[item]);\n      }\n    }) //   .then((res) => this.setState({\n    //   }))\n    .then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    if (this.state.post === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (posts.length === 0) {\n      poemJSX = 'No poems, create some';\n    } else {\n      // eslint-disable-next-line array-callback-return\n      poemJSX = this.words.map(poem => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)\n      }, word.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: poemJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(PoemWords);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js"],"names":["React","Component","indexWords","withRouter","PoemWords","constructor","props","state","words","componentDidMount","match","user","msgAlert","params","id","then","res","console","log","data","item","heading","message","variant","catch","error","render","post","poemJSX","posts","length","map","poem","word"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA4B,KAAKN,KAAvC;AAEAJ,IAAAA,UAAU,CAACQ,KAAK,CAACG,MAAN,CAAaC,EAAd,EAAkBH,IAAlB,CAAV,CACGI,IADH,CACSC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASX,KAArB;;AACA,WAAK,IAAIY,IAAT,IAAiBJ,GAAG,CAACG,IAAJ,CAASX,KAA1B,EAAiC;AAC/B;AACA;AACH;AACGS,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASX,KAAT,CAAeY,IAAf,CAAZ;AACD;AACJ,KATH,EAUA;AAEA;AAZA,KAaGL,IAbH,CAaQ,MAAM;AACVH,MAAAA,QAAQ,CAAC;AACPS,QAAAA,OAAO,EAAE,cADF;AAEPC,QAAAA,OAAO,EAAE,cAFF;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR;AAKD,KAnBH,EAoBGC,KApBH,CAoBUC,KAAD,IAAW;AAChBb,MAAAA,QAAQ,CAAC;AACPS,QAAAA,OAAO,EAAE,aADF;AAEPC,QAAAA,OAAO,EAAE,oBAAoBG,KAAK,CAACH,OAF5B;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR;AAKD,KA1BH;AA2BD;;AAGHG,EAAAA,MAAM,GAAI;AACR,QAAI,KAAKnB,KAAL,CAAWoB,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,aAAO,YAAP;AACD;;AAED,QAAIC,OAAJ;;AACA,QAAIC,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;AACtBF,MAAAA,OAAO,GAAG,uBAAV;AACD,KAFD,MAEO;AACL;AACAA,MAAAA,OAAO,GAAG,KAAKpB,KAAL,CAAWuB,GAAX,CAAgBC,IAAD,iBACvB;AAAA,+BACE;AAAA,oBAAIC,IAAI,CAACA;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,IAAI,CAACnB,EAAf;AAAA;AAAA;AAAA;AAAA,cADQ,CAAV;AAKD;;AACD,wBACE;AAAA,6BACE;AAAA,kBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD;;AA/DiC;;AAkElC,oBAAezB,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { indexWords } from '../../api/poem'\nimport { withRouter } from 'react-router-dom'\n\nclass PoemWords extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n        words:[]\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n\n    indexWords(match.params.id, user)\n      .then((res) => {\n          console.log(res.data.words)\n          for (let item in res.data.words) {\n            // this.setState({\n            //     words: this.words.push(word)\n\t        // })\n            console.log(res.data.words[item])\n          }\n      })\n    //   .then((res) => this.setState({\n\n    //   }))\n      .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n\nrender () {\n  if (this.state.post === null) {\n    return 'Loading...'\n  }\n\n  let poemJSX\n  if (posts.length === 0) {\n    poemJSX = 'No poems, create some'\n  } else {\n    // eslint-disable-next-line array-callback-return\n    poemJSX = this.words.map((poem) => (\n      <div key={word.id}>\n        <p>{word.word}</p>\n      </div>\n    ))\n  }\n  return (\n    <>\n      <ul>{poemJSX}</ul>\n    </>\n  )\n}\n}\n\nexport default withRouter(PoemWords)\n"]},"metadata":{},"sourceType":"module"}