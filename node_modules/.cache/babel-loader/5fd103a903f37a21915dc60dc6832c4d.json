{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js\";\nimport React, { Component } from 'react';\nimport { indexWords } from '../../api/poem';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PoemWords extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      words: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    indexWords(match.params.id, user).then(res => {\n      //   console.log(res.data.words)\n      for (let item in res.data.words) {\n        this.setState({\n          words: [...this.state.words, res.data.words[item]]\n        }); //simple value\n        // console.log(res.data.words[item])\n      }\n    }).then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    if (this.state.post === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (this.state.words[0] === undefined) {\n      poemJSX = 'No poems, create some';\n    } else {}\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(PoemWords);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PoemWords.js"],"names":["React","Component","indexWords","withRouter","PoemWords","constructor","props","state","words","componentDidMount","match","user","msgAlert","params","id","then","res","item","data","setState","heading","message","variant","catch","error","render","post","poemJSX","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAA4B,KAAKN,KAAvC;AAEAJ,IAAAA,UAAU,CAACQ,KAAK,CAACG,MAAN,CAAaC,EAAd,EAAkBH,IAAlB,CAAV,CACGI,IADH,CACSC,GAAD,IAAS;AACb;AACE,WAAK,IAAIC,IAAT,IAAiBD,GAAG,CAACE,IAAJ,CAASV,KAA1B,EAAiC;AAC/B,aAAKW,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAuBQ,GAAG,CAACE,IAAJ,CAASV,KAAT,CAAeS,IAAf,CAAvB;AAAT,SAAd,EAD+B,CACyC;AACxE;AACD;AACJ,KAPH,EASGF,IATH,CASQ,MAAM;AACVH,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,OAAO,EAAE,cADF;AAEPC,QAAAA,OAAO,EAAE,cAFF;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR;AAKD,KAfH,EAgBGC,KAhBH,CAgBUC,KAAD,IAAW;AAChBZ,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,OAAO,EAAE,aADF;AAEPC,QAAAA,OAAO,EAAE,oBAAoBG,KAAK,CAACH,OAF5B;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR;AAKD,KAtBH;AAuBD;;AAGHG,EAAAA,MAAM,GAAI;AACR,QAAI,KAAKlB,KAAL,CAAWmB,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,aAAO,YAAP;AACD;;AACD,QAAIC,OAAJ;;AACA,QAAI,KAAKpB,KAAL,CAAWC,KAAX,CAAiB,CAAjB,MAAwBoB,SAA5B,EAAuC;AACrCD,MAAAA,OAAO,GAAG,uBAAV;AACD,KAFD,MAEO,CAEN;;AAED,wBACE;AAAA,6BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AASD;;AA1DiC;;AA6DlC,oBAAexB,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { indexWords } from '../../api/poem'\nimport { withRouter } from 'react-router-dom'\n\nclass PoemWords extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n        words:[]\n    }\n  }\n\n  componentDidMount () {\n    const { match, user, msgAlert } = this.props\n\n    indexWords(match.params.id, user)\n      .then((res) => {\n        //   console.log(res.data.words)\n          for (let item in res.data.words) {\n            this.setState({ words: [...this.state.words, (res.data.words[item])] }) //simple value\n            // console.log(res.data.words[item])\n          }\n      })\n\n      .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n\nrender () {\n  if (this.state.post === null) {\n    return 'Loading...'\n  }\n  let poemJSX\n  if (this.state.words[0] === undefined) {\n    poemJSX = 'No poems, create some'\n  } else {\n      \n  }\n  \n  return (\n    <>\n      <div>\n        <ul>\n\n        </ul>\n      </div>\n    </>\n  )\n}\n}\n\nexport default withRouter(PoemWords)\n"]},"metadata":{},"sourceType":"module"}