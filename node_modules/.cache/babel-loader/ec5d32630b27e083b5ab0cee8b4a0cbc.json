{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PublicPoems.js\";\nimport React, { Component } from 'react';\nimport { indexPublicPoems } from '../../api/poem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass PublicPoems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      poems: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user,\n      msgAlert\n    } = this.props;\n    indexPublicPoems(user).then(res => this.setState({\n      poems: res.data.poems\n    })).then(() => {\n      msgAlert({\n        heading: 'See all <30 Poems',\n        message: 'Look at allll those Poems',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'Index Failed',\n        message: 'Index error:' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    const {\n      poems\n    } = this.state;\n\n    if (poems === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (poems.length === 0) {\n      poemJSX = 'No poems created yet!';\n    } else {\n      // eslint-disable-next-line array-callback-return\n      poemJSX = poems.map(poem => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: poem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, poem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Public Poems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: poemJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n} //  PUBLIC WORDS Component //  PUBLIC WORDS Component //  PUBLIC WORDS Component\n\n\nclass OnePoem extends Component {\n  constructor(props) {\n    super(props); // funtion to pass to child\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      id: null,\n      title: \"\",\n      owner: null,\n      stateChanged: false,\n      words: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    this.getPoemWords(match.params.id, user);\n    showPoem(match.params.id, user).then(res => this.setState({\n      title: res.data.poem.title,\n      id: res.data.poem.id,\n      owner: res.data.poem.owner\n    }));\n  }\n\n  getPoemWords(id, user) {\n    // const { match, user } = this.props\n    indexWords(id, user).then(res => {\n      for (let item in res.data.words) {\n        this.setState({\n          words: [...this.state.words, res.data.words[item]]\n        }); //simple value\n      }\n    });\n  }\n\n  render() {\n    const {\n      user,\n      msgAlert,\n      match,\n      history\n    } = this.props;\n    const {\n      words\n    } = this.state;\n\n    if (words === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (words[0] === undefined) {\n      poemJSX = 'No words, add some!';\n    } else {\n      poemJSX = words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Viewing Poem:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poem-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-link\",\n            children: this.state.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poem font-link\",\n          children: poemJSX\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default OnePoem;","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/PublicPoems.js"],"names":["React","Component","indexPublicPoems","PublicPoems","constructor","props","state","poems","componentDidMount","user","msgAlert","then","res","setState","data","heading","message","variant","catch","error","render","poemJSX","length","map","poem","title","id","OnePoem","handler","bind","owner","stateChanged","words","match","getPoemWords","params","showPoem","indexWords","item","history","undefined","word","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { indexPublicPoems } from '../../api/poem'\n\nclass PublicPoems extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      poems: null\n    }\n  }\n\n  componentDidMount () {\n    const { user, msgAlert } = this.props\n\n    indexPublicPoems(user)\n      .then((res) => this.setState({ poems: res.data.poems }))\n      .then(() => {\n        msgAlert({\n          heading: 'See all <30 Poems',\n          message: 'Look at allll those Poems',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Index Failed',\n          message: 'Index error:' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n\nrender () {\n  const { poems } = this.state\n\n  if (poems === null) {\n    return 'Loading...'\n  }\n\n  let poemJSX\n  if (poems.length === 0) {\n    poemJSX = 'No poems created yet!'\n  } else {\n    // eslint-disable-next-line array-callback-return\n    poemJSX = poems.map((poem) => (\n      <div key={poem.id}>\n        <h3>{poem.title}</h3>\n        <>\n        </>\n      </div>\n    ))\n  }\n  return (\n    <>\n      <h1>Public Poems</h1>\n      <p></p>\n      <div>{poemJSX}</div>\n\n    </>\n  )\n}\n}\n\n//  PUBLIC WORDS Component //  PUBLIC WORDS Component //  PUBLIC WORDS Component\n\nclass OnePoem extends Component {\n  constructor (props) {\n    super(props)\n    // funtion to pass to child\n    this.handler = this.handler.bind(this)\n    \n    this.state = {\n        id: null,\n        title: \"\",\n        owner: null,\n        stateChanged: false,\n        words:[]\n    }\n  }\n\n  componentDidMount () {\n        const { match, user, msgAlert } = this.props\n        this.getPoemWords(match.params.id, user)\n\n        showPoem(match.params.id, user)\n        .then((res) => this.setState({\n        title: res.data.poem.title,\n        id: res.data.poem.id,\n        owner: res.data.poem.owner\n        }))\n  }\n\n  getPoemWords (id, user) {\n        // const { match, user } = this.props\n\n        indexWords(id, user)\n        .then((res) => {\n          for (let item in res.data.words) {\n            this.setState({ words: [...this.state.words, (res.data.words[item])] }) //simple value\n          }\n      })\n  }\n\n\nrender () {\n  const { user, msgAlert, match, history } = this.props\n  const { words } = this.state\n\n  if (words === null) {\n    return 'Loading...'\n  }\n  let poemJSX \n  if (words[0] === undefined) {\n    poemJSX = 'No words, add some!'\n  } else {\n      poemJSX = words.map((word, index) => (\n          <div className=\"word\" key={index}>\n            <h5>{word.word}</h5>\n          </div>\n      ))\n  }\n\n  return (\n    <>\n    <h3>Viewing Poem:</h3>\n      <div>\n        <div className=\"poem-header\">\n            <h4 className=\"font-link\">{this.state.title}</h4>\n        </div>\n        <div className=\"poem font-link\">{poemJSX}</div>\n      </div>\n    </>\n  )\n}\n}\n\nexport default (OnePoem)\n\n\n\n"]},"metadata":{},"sourceType":"module"}