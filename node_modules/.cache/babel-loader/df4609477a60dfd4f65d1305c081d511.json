{"ast":null,"code":"import _classCallCheck from\"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{createWord,getWordList}from'../../api/poem';// style blocks\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var panel={position:'absolute',top:'100px',right:'10px',width:'200px',height:'970px',border:'1px solid #000',padding:'2px',borderRadius:'6px'};// const position = {\n//     position: 'absolute',\n//     right: '50px',\n//     top: '100px'\n// }\nvar WordPanel=/*#__PURE__*/function(_Component){_inherits(WordPanel,_Component);var _super=_createSuper(WordPanel);function WordPanel(props){var _this;_classCallCheck(this,WordPanel);_this=_super.call(this,props);_this.state={wordList:null,words:[]};return _this;}_createClass(WordPanel,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var _this$props=this.props,user=_this$props.user,msgAlert=_this$props.msgAlert;getWordList(user).then(function(res){return _this2.setState({wordList:res.data});}).then(function(){msgAlert({heading:'Word List Generated',message:'Woo Created',variant:'success'});}).catch(function(error){msgAlert({heading:'Get Words Fail',message:'Poem error: '+error.message,variant:'danger'});});}},{key:\"addWord\",value:function addWord(data){var _this3=this;var _this$props2=this.props,user=_this$props2.user,msgAlert=_this$props2.msgAlert,poemid=_this$props2.poemid;// create data to pass to create word api call\ndata={word:data,xcoordinate:0,ycoordinate:0};createWord(data,poemid,user).then(function(res){return _this3.props.handler(res.data.word);}).then(function(){msgAlert({heading:'Word Added to Poem',message:'Woot success',variant:'success'});}).catch(function(error){msgAlert({heading:'Word to Poem Failed',message:'Error message: '+error.message,variant:'danger'});});}},{key:\"render\",value:function render(){var _this4=this;// variable to hold the state\nvar wordList=this.state.wordList;var wordListJSX;if(wordList===null){return'Loading...';}else{wordListJSX=wordList.map(function(word,index){return/*#__PURE__*/_jsx(\"div\",{className:\"word-panel\",children:/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this4.addWord(word);},children:word})},index);});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:panel,children:/*#__PURE__*/_jsx(\"ul\",{children:wordListJSX})})});}}]);return WordPanel;}(Component);export default WordPanel;","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/WordPanel.js"],"names":["React","Component","createWord","getWordList","panel","position","top","right","width","height","border","padding","borderRadius","WordPanel","props","state","wordList","words","user","msgAlert","then","res","setState","data","heading","message","variant","catch","error","poemid","word","xcoordinate","ycoordinate","handler","wordListJSX","map","index","addWord"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createWord, getWordList } from '../../api/poem'\n\n// style blocks\nconst panel = {\n  position: 'absolute',\n  top: '100px',\n  right: '10px',\n  width: '200px',\n  height: '970px',\n  border: '1px solid #000',\n  padding: '2px',\n  borderRadius: '6px'\n}\n// const position = {\n//     position: 'absolute',\n//     right: '50px',\n//     top: '100px'\n// }\n\nclass WordPanel extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n        wordList: null,\n        words: []\n        }\n    }\n\n    componentDidMount () {\n        const { user, msgAlert } = this.props\n\n        getWordList(user)\n            .then((res) => this.setState({wordList: res.data}))\n            .then(() => {\n                msgAlert({\n                    heading: 'Word List Generated',\n                    message: 'Woo Created',\n                    variant: 'success'\n                })\n            })\n            .catch((error) => {\n                msgAlert({\n                    heading: 'Get Words Fail',\n                    message: 'Poem error: ' + error.message,\n                    variant: 'danger'\n                })\n            })\n    }\n\n    addWord (data) {\n        const {user, msgAlert, poemid} = this.props\n        // create data to pass to create word api call\n        data = {\n            word: data,\n            xcoordinate: 0, \n            ycoordinate: 0\n        }\n        createWord(data, poemid, user)\n        .then((res) => this.props.handler(res.data.word))\n        .then(() => {\n        msgAlert({\n          heading: 'Word Added to Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n        })\n        .catch((error) => {\n        msgAlert({\n          heading: 'Word to Poem Failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n        })\n    }\n\n    render () {\n    // variable to hold the state\n    const { wordList } = this.state\n\n    let wordListJSX\n    if (wordList === null) {\n        return 'Loading...'\n    }else{\n        wordListJSX = wordList.map((word, index) => (\n            <div className=\"word-panel\" key={index}>\n                    <li onClick={ () => this.addWord(word)}>{word}</li>\n            </div>\n        ))\n    }\n    return (\n        <>\n            <div style={panel}>\n                <ul>{wordListJSX}</ul>\n            </div>\n        </>\n    )\n    }\n}\n\nexport default WordPanel\n"]},"metadata":{},"sourceType":"module"}