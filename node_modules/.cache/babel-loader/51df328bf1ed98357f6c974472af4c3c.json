{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/WordPanel.js\";\nimport React, { Component } from 'react';\nimport { createWord, getWordList } from '../../api/poem'; // style blocks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst panel = {\n  position: 'absolute',\n  top: '100px',\n  right: '10px',\n  width: '200px',\n  height: '970px',\n  border: '1px solid #000',\n  padding: '2px'\n};\nconst position = {\n  position: 'absolute',\n  right: '50px',\n  top: '100px'\n};\n\nclass WordPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordList: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user,\n      msgAlert,\n      history\n    } = this.props;\n    getWordList(user).then(res => this.setState({\n      wordList: res.data\n    })).then(() => {\n      msgAlert({\n        heading: 'Word List Generated',\n        message: 'Woo Created',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'Get Words Fail',\n        message: 'Poem error: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  addWord() {\n    const {\n      user,\n      msgAlert,\n      poemid\n    } = this.props; // word\n\n    createWord(data, match.params.id, user).then(res => this.setState({\n      title: res.data.poem.title,\n      id: res.data.poem.id,\n      owner: res.data.poem.owner\n    })).then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    // variable to hold the state\n    const {\n      wordList\n    } = this.state;\n    let wordListJSX;\n\n    if (wordList === null) {\n      return 'Loading...';\n    } else {\n      wordListJSX = wordList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.addWord,\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: panel,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: wordListJSX\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default WordPanel;","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/WordPanel.js"],"names":["React","Component","createWord","getWordList","panel","position","top","right","width","height","border","padding","WordPanel","constructor","props","state","wordList","componentDidMount","user","msgAlert","history","then","res","setState","data","heading","message","variant","catch","error","addWord","poemid","match","params","id","title","poem","owner","render","wordListJSX","map","word"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createWord, getWordList } from '../../api/poem'\n\n// style blocks\nconst panel = {\n  position: 'absolute',\n  top: '100px',\n  right: '10px',\n  width: '200px',\n  height: '970px',\n  border: '1px solid #000',\n  padding: '2px'\n}\nconst position = {\n    position: 'absolute',\n    right: '50px',\n    top: '100px'\n}\n\nclass WordPanel extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n        wordList: null\n        }\n    }\n\n    componentDidMount () {\n        const { user, msgAlert, history } = this.props\n\n        getWordList(user)\n            .then((res) => this.setState({wordList: res.data}))\n            .then(() => {\n                msgAlert({\n                    heading: 'Word List Generated',\n                    message: 'Woo Created',\n                    variant: 'success'\n                })\n            })\n            .catch((error) => {\n                msgAlert({\n                    heading: 'Get Words Fail',\n                    message: 'Poem error: ' + error.message,\n                    variant: 'danger'\n                })\n            })\n    }\n\n    addWord () {\n        const {user, msgAlert, poemid} = this.props\n        // word\n\n        createWord(data, match.params.id, user)\n        .then((res) => this.setState({\n        title: res.data.poem.title,\n        id: res.data.poem.id,\n        owner: res.data.poem.owner\n        }))\n        .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n        })\n        .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n        })\n\n    }\n\n    render () {\n    // variable to hold the state\n    const { wordList } = this.state\n\n    let wordListJSX\n    if (wordList === null) {\n        return 'Loading...'\n    }else{\n        wordListJSX = wordList.map((word) => (\n            <div key={word}>\n                    <li onClick={this.addWord}>{word}</li>\n            </div>\n        ))\n    }\n    return (\n        <>\n            <div style={panel}>\n                <ul>{wordListJSX}</ul>\n            </div>\n        </>\n    )\n    }\n}\n\nexport default WordPanel\n"]},"metadata":{},"sourceType":"module"}