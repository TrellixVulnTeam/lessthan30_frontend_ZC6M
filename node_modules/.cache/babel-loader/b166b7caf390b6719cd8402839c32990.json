{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/OnePoem.js\";\nimport React, { Component } from 'react';\nimport { showPoem } from '../../api/poem';\nimport { withRouter } from 'react-router-dom';\nimport PoemWords from './PoemWords';\nimport WordPanel from './WordPanel';\nimport { indexWords } from '../../api/poem'; // parent of WordPanel and PoemWords\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass OnePoem extends Component {\n  constructor(props) {\n    super(props);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      id: null,\n      title: \"\",\n      owner: null,\n      stateChanged: false,\n      words: []\n    };\n  } //   found from stck overflow: https://stackoverflow.com/questions/35537229/how-can-i-update-the-parents-state-in-react\n\n\n  handler() {\n    this.setState(prevState => ({\n      stateChanged: !prevState.stateChanged\n    }));\n    console.log(this.state.stateChanged);\n  }\n\n  componentDidMount() {\n    this.getPoemWords();\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    showPoem(match.params.id, user).then(res => this.setState({\n      title: res.data.poem.title,\n      id: res.data.poem.id,\n      owner: res.data.poem.owner\n    })).then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  getPoemWords() {\n    const {\n      match,\n      user,\n      msgAlert\n    } = this.props;\n    indexWords(match.params.id, user).then(res => {\n      //   console.log(res.data.words)\n      for (let item in res.data.words) {\n        this.setState({\n          words: [...this.state.words, res.data.words[item]]\n        }); //simple value\n        // console.log(res.data.words[item])\n      }\n    }).then(() => {\n      msgAlert({\n        heading: 'Viewing Poem',\n        message: 'Woot success',\n        variant: 'success'\n      });\n    }).catch(error => {\n      msgAlert({\n        heading: 'View failed',\n        message: 'Error message: ' + error.message,\n        variant: 'danger'\n      });\n    });\n  }\n\n  render() {\n    const {\n      user,\n      msgAlert\n    } = this.props;\n\n    if (this.state.post === null) {\n      return 'Loading...';\n    }\n\n    const {\n      words\n    } = this.words;\n\n    if (words === null) {\n      return 'Loading...';\n    }\n\n    let poemJSX;\n\n    if (words[0] === undefined) {\n      poemJSX = 'No words, add some!';\n    } else {\n      poemJSX = words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Viewing Poem:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(PoemWords, {\n            msgAlert: msgAlert,\n            user: user,\n            words: this.state.words\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(WordPanel, {\n          msgAlert: msgAlert,\n          user: user,\n          poemid: this.state.id,\n          handler: this.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(OnePoem);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/OnePoem.js"],"names":["React","Component","showPoem","withRouter","PoemWords","WordPanel","indexWords","OnePoem","constructor","props","handler","bind","state","id","title","owner","stateChanged","words","setState","prevState","console","log","componentDidMount","getPoemWords","match","user","msgAlert","params","then","res","data","poem","heading","message","variant","catch","error","item","render","post","poemJSX","undefined","map","word","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { showPoem } from '../../api/poem'\nimport { withRouter } from 'react-router-dom'\nimport PoemWords from './PoemWords'\nimport WordPanel from './WordPanel'\nimport { indexWords } from '../../api/poem'\n\n\n// parent of WordPanel and PoemWords\nclass OnePoem extends Component {\n  constructor (props) {\n    super(props)\n\n    this.handler = this.handler.bind(this)\n    \n    this.state = {\n        id: null,\n        title: \"\",\n        owner: null,\n        stateChanged: false,\n        words:[]\n    }\n  }\n\n  //   found from stck overflow: https://stackoverflow.com/questions/35537229/how-can-i-update-the-parents-state-in-react\n  handler() {\n    this.setState(prevState => ({\n      stateChanged: !prevState.stateChanged\n    }))\n    console.log(this.state.stateChanged)\n  }\n\n  componentDidMount () {\n      this.getPoemWords()\n    const { match, user, msgAlert } = this.props\n\n    showPoem(match.params.id, user)\n      .then((res) => this.setState({\n        title: res.data.poem.title,\n        id: res.data.poem.id,\n        owner: res.data.poem.owner\n      }))\n      .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  getPoemWords () {\n      const { match, user, msgAlert } = this.props\n\n    indexWords(match.params.id, user)\n      .then((res) => {\n        //   console.log(res.data.words)\n          for (let item in res.data.words) {\n            this.setState({ words: [...this.state.words, (res.data.words[item])] }) //simple value\n            // console.log(res.data.words[item])\n          }\n      })\n\n      .then(() => {\n        msgAlert({\n          heading: 'Viewing Poem',\n          message: 'Woot success',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'View failed',\n          message: 'Error message: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n\nrender () {\n  const { user, msgAlert } = this.props\n  if (this.state.post === null) {\n    return 'Loading...'\n  }\n  \n  const { words } = this.words\n  if (words === null) {\n    return 'Loading...'\n  }\n  let poemJSX \n  if (words[0] === undefined) {\n    poemJSX = 'No words, add some!'\n  } else {\n      poemJSX = words.map((word, index) => (\n          <div key={index}>\n            <p>{word.word}</p>\n          </div>\n      ))\n  }\n\n  return (\n    <>\n      <div>\n        <h3>Viewing Poem:</h3>\n        <h4>{this.state.title}</h4>\n        <ul>\n          <PoemWords msgAlert={msgAlert} user={user} words={this.state.words}/>\n        </ul>\n        <WordPanel msgAlert={msgAlert} user={user} poemid={this.state.id} handler={this.handler}/>\n      </div>\n    </>\n  )\n}\n}\n\nexport default withRouter(OnePoem)\n"]},"metadata":{},"sourceType":"module"}