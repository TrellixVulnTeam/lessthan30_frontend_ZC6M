{"ast":null,"code":"var _jsxFileName = \"/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/WordPanel.js\";\nimport React, { Component } from 'react';\nimport { createWord, getWordList } from '../../api/poem'; // style blocks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst panel = {\n  position: 'absolute',\n  top: '100px',\n  right: '10px',\n  width: '200px',\n  height: '970px',\n  border: '1px solid #000',\n  padding: '2px'\n}; // const position = {\n//     position: 'absolute',\n//     right: '50px',\n//     top: '100px'\n// }\n\nclass WordPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordList: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n    getWordList(user).then(res => this.setState({\n      wordList: res.data\n    }));\n  }\n\n  addWord(data) {\n    const {\n      user,\n      poemid\n    } = this.props; // create data to pass to create word api call\n\n    data = {\n      word: data,\n      xcoordinate: 0,\n      ycoordinate: 0\n    };\n    console.log(poemid);\n    createWord(data, poemid, user) // .then((res) => this.setState({\n    // title: res.data.poem.title,\n    // id: res.data.poem.id,\n    // owner: res.data.poem.owner\n    // }))\n    .then(this.props.handler());\n  }\n\n  render() {\n    // variable to hold the state\n    const {\n      wordList\n    } = this.state;\n    let wordListJSX;\n\n    if (wordList === null) {\n      return 'Loading...';\n    } else {\n      wordListJSX = wordList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => this.addWord(word),\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: panel,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: wordListJSX\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default WordPanel;","map":{"version":3,"sources":["/Users/heuchertc/sei/projects/lessthan30_django_env/lessthan30_frontend/src/components/Poems/WordPanel.js"],"names":["React","Component","createWord","getWordList","panel","position","top","right","width","height","border","padding","WordPanel","constructor","props","state","wordList","componentDidMount","user","then","res","setState","data","addWord","poemid","word","xcoordinate","ycoordinate","console","log","handler","render","wordListJSX","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,gBAAxC,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,UADE;AAEZC,EAAAA,GAAG,EAAE,OAFO;AAGZC,EAAAA,KAAK,EAAE,MAHK;AAIZC,EAAAA,KAAK,EAAE,OAJK;AAKZC,EAAAA,MAAM,EAAE,OALI;AAMZC,EAAAA,MAAM,EAAE,gBANI;AAOZC,EAAAA,OAAO,EAAE;AAPG,CAAd,C,CASA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAC9BY,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACbC,MAAAA,QAAQ,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKJ,KAAtB;AAEAX,IAAAA,WAAW,CAACe,IAAD,CAAX,CACKC,IADL,CACWC,GAAD,IAAS,KAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAf,KAAd,CADnB;AAEH;;AAEDC,EAAAA,OAAO,CAAED,IAAF,EAAQ;AACX,UAAM;AAACJ,MAAAA,IAAD;AAAOM,MAAAA;AAAP,QAAiB,KAAKV,KAA5B,CADW,CAEX;;AACAQ,IAAAA,IAAI,GAAG;AACHG,MAAAA,IAAI,EAAEH,IADH;AAEHI,MAAAA,WAAW,EAAE,CAFV;AAGHC,MAAAA,WAAW,EAAE;AAHV,KAAP;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAtB,IAAAA,UAAU,CAACoB,IAAD,EAAOE,MAAP,EAAeN,IAAf,CAAV,CACA;AACA;AACA;AACA;AACA;AALA,KAMCC,IAND,CAMM,KAAKL,KAAL,CAAWgB,OAAX,EANN;AAOH;;AAEDC,EAAAA,MAAM,GAAI;AACV;AACA,UAAM;AAAEf,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,QAAIiB,WAAJ;;AACA,QAAIhB,QAAQ,KAAK,IAAjB,EAAuB;AACnB,aAAO,YAAP;AACH,KAFD,MAEK;AACDgB,MAAAA,WAAW,GAAGhB,QAAQ,CAACiB,GAAT,CAAcR,IAAD,iBACvB;AAAA,+BACQ;AAAI,UAAA,OAAO,EAAG,MAAM,KAAKF,OAAL,CAAaE,IAAb,CAApB;AAAA,oBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA;AADR,SAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,cADU,CAAd;AAKH;;AACD,wBACI;AAAA,6BACI;AAAK,QAAA,KAAK,EAAErB,KAAZ;AAAA,+BACI;AAAA,oBAAK4B;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAOC;;AAvD6B;;AA0DlC,eAAepB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { createWord, getWordList } from '../../api/poem'\n\n// style blocks\nconst panel = {\n  position: 'absolute',\n  top: '100px',\n  right: '10px',\n  width: '200px',\n  height: '970px',\n  border: '1px solid #000',\n  padding: '2px'\n}\n// const position = {\n//     position: 'absolute',\n//     right: '50px',\n//     top: '100px'\n// }\n\nclass WordPanel extends Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n        wordList: null\n        }\n    }\n\n    componentDidMount () {\n        const { user } = this.props\n\n        getWordList(user)\n            .then((res) => this.setState({wordList: res.data}))\n    }\n\n    addWord (data) {\n        const {user, poemid} = this.props\n        // create data to pass to create word api call\n        data = {\n            word: data,\n            xcoordinate: 0, \n            ycoordinate: 0\n        }\n        console.log(poemid)\n        createWord(data, poemid, user)\n        // .then((res) => this.setState({\n        // title: res.data.poem.title,\n        // id: res.data.poem.id,\n        // owner: res.data.poem.owner\n        // }))\n        .then(this.props.handler())\n    }\n\n    render () {\n    // variable to hold the state\n    const { wordList } = this.state\n\n    let wordListJSX\n    if (wordList === null) {\n        return 'Loading...'\n    }else{\n        wordListJSX = wordList.map((word) => (\n            <div key={word}>\n                    <li onClick={ () => this.addWord(word)}>{word}</li>\n            </div>\n        ))\n    }\n    return (\n        <>\n            <div style={panel}>\n                <ul>{wordListJSX}</ul>\n            </div>\n        </>\n    )\n    }\n}\n\nexport default WordPanel\n"]},"metadata":{},"sourceType":"module"}